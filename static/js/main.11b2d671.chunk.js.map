{"version":3,"sources":["components/Forecast/Forecast.module.css","components/Logo/Logo.module.css","components/Conditions/Conditions.module.css","components/Conditions/Conditions.js","components/Forecast/Forecast.js","components/Logo/Logo.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","conditions","props","className","classes","Wrapper","error","Small","loading","Loader","responseObj","cod","name","Math","round","main","temp","weather","description","Forecast","useState","setResponseObj","city","setCity","unit","setUnit","setError","setLoading","key","setKey","uriEncodedCity","encodeURIComponent","onSubmit","e","preventDefault","length","url","fetch","then","value","ms","Promise","resolve","setTimeout","sleep","random","response","json","Error","catch","err","console","message","type","placeholder","maxLength","textInput","onChange","target","Radio","checked","Button","Conditions","Logo","sky","circle","cloud1","cloud2","cloud3","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.11b2d671.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"textInput\":\"Forecast_textInput__2AQe2\",\"Radio\":\"Forecast_Radio__E3C_h\",\"Button\":\"Forecast_Button__xX44_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"circle\":\"Logo_circle__2RiV1\",\"sky\":\"Logo_sky__23K2O\",\"cloud1\":\"Logo_cloud1__1hNUH\",\"cloud2\":\"Logo_cloud2__2rTBv\",\"cloud3\":\"Logo_cloud3__2Vwp2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"Conditions_Wrapper__ZCA7t\",\"Small\":\"Conditions_Small__2vGVg\",\"Loader\":\"Conditions_Loader__Nw5KN\",\"spin\":\"Conditions_spin__3MyJr\"};","import React from 'react';\r\nimport classes from './Conditions.module.css';\r\n\r\nconst conditions = (props) => {\r\n    return (\r\n        <div className={classes.Wrapper}>\r\n            {props.error && <small className={classes.Small}>Please enter a valid city and key.</small>}\r\n\r\n            {props.loading && <div className={classes.Loader} />}\r\n\r\n            {props.responseObj.cod === 200 ?\r\n                <div>\r\n                    <p><strong>{props.responseObj.name}</strong></p>\r\n                    <p>It is currently {Math.round(props.responseObj.main.temp)} degrees out with {props.responseObj.weather[0].description}.</p>\r\n                </div>\r\n                : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default conditions;","import React, { useState } from 'react';\r\nimport Conditions from '../Conditions/Conditions';\r\nimport classes from './Forecast.module.css';\r\n\r\nconst Forecast = () => {\r\n    let [responseObj, setResponseObj] = useState({});\r\n    let [city, setCity] = useState('London');\r\n    let [unit, setUnit] = useState('imperial');\r\n    let [error, setError] = useState(false);\r\n    let [loading, setLoading] = useState(false);\r\n    let [key, setKey] = useState('');\r\n\r\n    const uriEncodedCity = encodeURIComponent(city);\r\n\r\n    function getForecast(e) {\r\n        e.preventDefault();\r\n        if (city.length === 0) {\r\n            return setError(0);\r\n        }\r\n\r\n        setError(false);\r\n        setResponseObj({});\r\n        setLoading(true);\r\n\r\n\r\n        const url = `https://api.openweathermap.org/data/2.5/weather?q=${uriEncodedCity}&units=${unit}&appid=${key}`;\r\n        fetch(url)\r\n            //  The promise, returned by fetch, resolves with an object of the built-in Response class \r\n            //  as soon as the server responds with headers.\r\n            //  let resp = await fetch(url);\r\n\r\n            //       fetch(\"https://community-open-weather-map.p.rapidapi.com/weather?q=Manchester%2Cuk&units=metric\", {\r\n            //           \"method\": \"GET\",\r\n            //           \"headers\": {\r\n            //               \"x-rapidapi-key\": process.env.REACT_APP_API_KEY\r\n            //               \"x-rapidapi-host\": \"community-open-weather-map.p.rapidapi.com\"\r\n            //           }\r\n            //       })\r\n            .then(value => sleep(Math.random() * 5000, value))\r\n            .then(response => response.json())\r\n            .then(\r\n                response => {\r\n                    if (response.cod !== 200) {\r\n                        throw new Error();\r\n                    }\r\n                    //console.log(response);\r\n                    setResponseObj(response);\r\n                    setLoading(false);\r\n                })\r\n            .catch(err => {\r\n                setError(true);\r\n                setLoading(false);\r\n                console.error(err.message);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Find Current Weather Conditions</h2>\r\n            <form onSubmit={getForecast}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Enter Key\"\r\n                    maxLength=\"50\"\r\n                    className={classes.textInput}\r\n                    value={key}\r\n                    onChange={(e) => setKey(e.target.value)}\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Enter City\"\r\n                    maxLength=\"50\"\r\n                    className={classes.textInput}\r\n                    value={city}\r\n                    onChange={(e) => setCity(e.target.value)}\r\n                />\r\n                <label className={classes.Radio}>\r\n                    <input\r\n                        type=\"radio\"\r\n                        name=\"units\"\r\n                        checked={unit === \"imperial\"}\r\n                        value=\"imperial\"\r\n                        onChange={(e) => setUnit(e.target.value)}\r\n                    />\r\n                    Fahrenheit\r\n                </label>\r\n                <label className={classes.Radio}>\r\n                    <input\r\n                        type=\"radio\"\r\n                        name=\"units\"\r\n                        checked={unit === \"metric\"}\r\n                        value=\"metric\"\r\n                        onChange={(e) => setUnit(e.target.value)}\r\n                    />\r\n                    Celcius\r\n                </label>\r\n\r\n                <button\r\n                    className={classes.Button}\r\n                    type=\"submit\">Get Forecast</button>\r\n            </form>\r\n            <Conditions\r\n                responseObj={responseObj}\r\n                error={error}\r\n                loading={loading}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction sleep(ms, value) {\r\n    return new Promise(resolve => setTimeout(resolve, ms, value));\r\n}\r\n\r\nexport default Forecast;","import React from 'react';\r\nimport classes from \"./Logo.module.css\"\r\n\r\nconst Logo = () => (\r\n    <div className={classes.sky}>\r\n        <div className={classes.circle}/>\r\n        <div className={classes.cloud1} />\r\n        <div className={classes.cloud2} />\r\n        <div className={classes.cloud3} />\r\n    </div>\r\n)\r\n\r\nexport default Logo;","import React from 'react';\nimport './App.css';\nimport Forecast from \"./components/Forecast/Forecast\";\nimport Logo from \"./components/Logo/Logo\";\n\n/**\n * https://rapidapi.com/blog/weather-app-react/\n * https://github.com/jdretz/rapid-api-react-weather-app-tutorial\n */\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Logo />\n        <h1> Reactive Weather App</h1>\n        <main>\n          <Forecast />\n        </main>\n        <footer>\n          Page created by tnobile.\n        </footer>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}